# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
image: node:18

# Define the stages of the pipeline
stages:
  - build
  - deploy

# Set up the environment before running the jobs
before_script:
  - npm install

# Build stage: Install dependencies and build the application
build:
  stage: build
  script:
    - npm run build

# Deploy stage: Copy the built application to the Hostinger server using SSH
deploy:
  stage: deploy
  script:
    # Install 'sshpass' utility for password-based SSH authentication
    - apt-get update && apt-get install -y sshpass
    
    # Remove previous deployment from the server
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "rm -rf /path/to/previous/deployment/*"
    
    # Copy the contents of the 'dist' folder to the server
    - sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no -r ./dist/* $SSH_USER@$SSH_HOST:/path/to/destination/folder
